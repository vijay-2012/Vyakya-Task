# -*- coding: utf-8 -*-
"""Vyakyya task 2

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1bdCI45rm6u8GCmkwWLwfyoUdgtdK0ibj
"""

import pandas as pd

data = pd.read_excel('task2_data_processing.xlsx', sheet_name=None)
print(data)

data.keys()

sheet1 = data['Conflicting Roles']
sheet2 = data['Access Listing - Validation']
sheet3 = data['Invoice Validation']

filter_dataframe = pd.merge(sheet3, sheet2, on=['User'], how='inner')
filter_dataframe

filter_dataframe['Authorization'] = 'No'

filter_dataframe.loc[(filter_dataframe['A/P Invoice'] == 'Full Authorization') & (filter_dataframe['Adding Customer/Vendor Master Data'] == 'No Authorization') & 
                                                              (filter_dataframe['Adding Lead BP'] == 'No Authorization') &
                                                              (filter_dataframe['Remove Business Partner'] == 'No Authorization'), 'Authorization'] = 'Yes'

filter_dataframe

print(filter_dataframe['Authorization'].value_counts())

def conflict(row):
  res = []
  if row['Authorization'] == 'No':
    if row['A/P Invoice'] != "Full Authorization":
      res.append(row['A/P Invoice'])
    if row['Adding Customer/Vendor Master Data']=="Full Authorization":
      res.append("CRID001")
    if row['Adding Lead BP']=="Full Authorization":
      res.append("CRID002")
    if row['Remove Business Partner']=="Full Authorization":
      res.append("CRID003")
  else:
    return "No Conflicting Rules"
  return ",".join(res)

filter_dataframe['Conflicting Rules'] = filter_dataframe.apply(conflict,axis = 1)

filter_dataframe['Conflicting Rules'].value_counts()

final = filter_dataframe[['Document Number','Invoice Value','Department','Authorization','Conflicting Rules']]
final

final.to_csv('output.csv',index=False)

